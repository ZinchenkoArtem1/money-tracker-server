plugins {
    id 'org.springframework.boot' version '3.0.4'
    id 'java'
    id "org.sonarqube" version "4.0.0.2929"
    id 'jacoco'
}

group 'com.zinchenko'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.0.4')

    implementation 'org.springframework.boot:spring-boot-starter:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.0.4'

    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'org.liquibase:liquibase-core:4.21.1'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

    implementation 'org.jxls:jxls-jexcel:1.0.9'

    testImplementation 'com.squareup.okhttp:mockwebserver:2.7.5'
    testImplementation 'org.springframework.security:spring-security-test:6.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'uk.co.jemos.podam:podam:7.2.11.RELEASE'
}

test {
    useJUnitPlatform()
}

task startSpringBoot(type: GradleBuild) {
    tasks = ['bootRun']
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        xml.destination(file("${buildDir}/reports/jacoco/jacoco.xml"))
    }
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'money-tracker-server'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.token', 'sqp_cfbd808c6e8aad6afbce401bcb8de561144d172f'
        property 'sonar.language', 'java'
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/jacoco.xml"
        property 'sonar.coverage.exclusions', "**/dto/**, **/domain/**, **Config**"
    }
}
tasks['sonarqube'].dependsOn test
